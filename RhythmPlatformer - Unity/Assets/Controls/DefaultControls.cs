//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Controls/DefaultControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @DefaultControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @DefaultControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""DefaultControls"",
    ""maps"": [
        {
            ""name"": ""GameplayDefault"",
            ""id"": ""9878db16-605f-448f-a71b-b4e76ea1888c"",
            ""actions"": [
                {
                    ""name"": ""Digital Up"",
                    ""type"": ""Button"",
                    ""id"": ""bd1c5d3d-2e7e-4e85-8086-fa4bbfaf9f69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Digital Down"",
                    ""type"": ""Button"",
                    ""id"": ""9b03663b-98bb-4dfd-a283-659df5b4336d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Digital Left"",
                    ""type"": ""Button"",
                    ""id"": ""5a44775a-c01b-4e60-b893-3ae69c7c094e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Digital Right"",
                    ""type"": ""Button"",
                    ""id"": ""7e2efa6d-75f0-413a-9127-afe2d39b4346"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DigitalAxesModifier"",
                    ""type"": ""Button"",
                    ""id"": ""7036d85c-24df-4499-8fdb-96004197ce0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AnalogMove"",
                    ""type"": ""Value"",
                    ""id"": ""faceae50-1127-459f-9953-41cd9955b4dd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""360f4126-90c2-48c5-ac38-f20cff0c4ea1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""cefbd6bf-f804-4d4f-9017-5cf4193808a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WallCling"",
                    ""type"": ""Button"",
                    ""id"": ""a079fa59-bfe3-4a8f-be61-2ddd6b010fcb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DebugToggle"",
                    ""type"": ""Button"",
                    ""id"": ""4866d982-b308-46ab-b381-2d10274974b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""409057d4-7d4d-4398-a5cf-b6dff2052230"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnalogMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fa67f14-a583-479f-950d-a17f03c9578e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AnalogMove"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c1663adc-3ab2-4b3f-b986-7b835897f14b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5bdf2b0-0f41-4a7f-816e-fc2c899e4208"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""049da5de-03f6-494f-9908-af861ae6b569"",
                    ""path"": ""<HID::mayflash limited MAYFLASH GameCube Controller Adapter>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b141ba5-2dc9-4a8f-bdd4-a48d9179c707"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5212e3f5-76f8-4b97-a879-fe8d1520cf5d"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebaa28c4-a818-4643-b2f5-ee2a70c6fb88"",
                    ""path"": ""<HID::mayflash limited MAYFLASH GameCube Controller Adapter>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7ca458e-eeb6-4aa9-b338-be9f36016d42"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WallCling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5ff68c6-a3d0-4b0c-b8fd-c2987863522e"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WallCling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a1f28b7-4e34-4b14-a239-1a63af1a8798"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WallCling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2860714-571c-4277-a3b2-ebaf9dac13aa"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WallCling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d853e79-435f-40b3-bd8c-8397095dca94"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WallCling"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0cadff1e-0e8a-44a6-806f-09db54803006"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DebugToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5230a71-cfd1-48d8-9140-8946b581eab2"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0569b110-b09a-46ed-a0f7-5a1641ff98e1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f4e4c5c-ffc2-4f1b-ae61-a4f44b1fd489"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8e92f2a2-aaee-4a33-9874-a514884a9065"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DigitalAxesModifier"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a270d3c7-458d-4f1d-882d-55f052da9423"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a0f934e-bada-4ab9-8135-0897b1072745"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a321f2c-3acc-469d-83fb-0b5533482eb8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8da84610-3133-41c5-b93e-5e7e61a19192"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""efb92d45-1b03-4a80-8bfc-8091de41d4d7"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba1def10-f00b-48e6-8445-edb9107da4eb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e367122-c530-44e1-b6d7-99bd8b137dd6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f70f727-0469-4a28-a112-74d93b842393"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""150e6639-a6db-44bb-af03-43fd03dc0eff"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Digital Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Playback"",
            ""id"": ""91201e62-79ea-4402-962c-8968c7f03040"",
            ""actions"": [
                {
                    ""name"": ""ToggleRecording"",
                    ""type"": ""Button"",
                    ""id"": ""76cc84aa-c373-4ad6-acfb-da36ffa9889b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePlayback"",
                    ""type"": ""Button"",
                    ""id"": ""172f3fc7-79fb-48f1-afb7-84912813dd88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eca28578-914a-4e6a-8714-e8c0e6ad8993"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleRecording"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""249439b1-84c7-4aa8-bb4b-493ad0bf94c6"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePlayback"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UniversalInputs"",
            ""id"": ""496535aa-50d2-4881-b37b-8727a36094e7"",
            ""actions"": [
                {
                    ""name"": ""PauseToggle"",
                    ""type"": ""Button"",
                    ""id"": ""e3dd39a8-d5fd-4be6-a5fc-7918663e05ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ae2a51db-1ae5-4bc8-be62-ed30c0e848b4"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2584c18-3ebb-4542-ad08-6b53c2c0c20c"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PauseToggle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameplayDefault
        m_GameplayDefault = asset.FindActionMap("GameplayDefault", throwIfNotFound: true);
        m_GameplayDefault_DigitalUp = m_GameplayDefault.FindAction("Digital Up", throwIfNotFound: true);
        m_GameplayDefault_DigitalDown = m_GameplayDefault.FindAction("Digital Down", throwIfNotFound: true);
        m_GameplayDefault_DigitalLeft = m_GameplayDefault.FindAction("Digital Left", throwIfNotFound: true);
        m_GameplayDefault_DigitalRight = m_GameplayDefault.FindAction("Digital Right", throwIfNotFound: true);
        m_GameplayDefault_DigitalAxesModifier = m_GameplayDefault.FindAction("DigitalAxesModifier", throwIfNotFound: true);
        m_GameplayDefault_AnalogMove = m_GameplayDefault.FindAction("AnalogMove", throwIfNotFound: true);
        m_GameplayDefault_Dash = m_GameplayDefault.FindAction("Dash", throwIfNotFound: true);
        m_GameplayDefault_Jump = m_GameplayDefault.FindAction("Jump", throwIfNotFound: true);
        m_GameplayDefault_WallCling = m_GameplayDefault.FindAction("WallCling", throwIfNotFound: true);
        m_GameplayDefault_DebugToggle = m_GameplayDefault.FindAction("DebugToggle", throwIfNotFound: true);
        // Playback
        m_Playback = asset.FindActionMap("Playback", throwIfNotFound: true);
        m_Playback_ToggleRecording = m_Playback.FindAction("ToggleRecording", throwIfNotFound: true);
        m_Playback_TogglePlayback = m_Playback.FindAction("TogglePlayback", throwIfNotFound: true);
        // UniversalInputs
        m_UniversalInputs = asset.FindActionMap("UniversalInputs", throwIfNotFound: true);
        m_UniversalInputs_PauseToggle = m_UniversalInputs.FindAction("PauseToggle", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameplayDefault
    private readonly InputActionMap m_GameplayDefault;
    private IGameplayDefaultActions m_GameplayDefaultActionsCallbackInterface;
    private readonly InputAction m_GameplayDefault_DigitalUp;
    private readonly InputAction m_GameplayDefault_DigitalDown;
    private readonly InputAction m_GameplayDefault_DigitalLeft;
    private readonly InputAction m_GameplayDefault_DigitalRight;
    private readonly InputAction m_GameplayDefault_DigitalAxesModifier;
    private readonly InputAction m_GameplayDefault_AnalogMove;
    private readonly InputAction m_GameplayDefault_Dash;
    private readonly InputAction m_GameplayDefault_Jump;
    private readonly InputAction m_GameplayDefault_WallCling;
    private readonly InputAction m_GameplayDefault_DebugToggle;
    public struct GameplayDefaultActions
    {
        private @DefaultControls m_Wrapper;
        public GameplayDefaultActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DigitalUp => m_Wrapper.m_GameplayDefault_DigitalUp;
        public InputAction @DigitalDown => m_Wrapper.m_GameplayDefault_DigitalDown;
        public InputAction @DigitalLeft => m_Wrapper.m_GameplayDefault_DigitalLeft;
        public InputAction @DigitalRight => m_Wrapper.m_GameplayDefault_DigitalRight;
        public InputAction @DigitalAxesModifier => m_Wrapper.m_GameplayDefault_DigitalAxesModifier;
        public InputAction @AnalogMove => m_Wrapper.m_GameplayDefault_AnalogMove;
        public InputAction @Dash => m_Wrapper.m_GameplayDefault_Dash;
        public InputAction @Jump => m_Wrapper.m_GameplayDefault_Jump;
        public InputAction @WallCling => m_Wrapper.m_GameplayDefault_WallCling;
        public InputAction @DebugToggle => m_Wrapper.m_GameplayDefault_DebugToggle;
        public InputActionMap Get() { return m_Wrapper.m_GameplayDefault; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayDefaultActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayDefaultActions instance)
        {
            if (m_Wrapper.m_GameplayDefaultActionsCallbackInterface != null)
            {
                @DigitalUp.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalUp;
                @DigitalUp.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalUp;
                @DigitalUp.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalUp;
                @DigitalDown.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalDown;
                @DigitalDown.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalDown;
                @DigitalDown.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalDown;
                @DigitalLeft.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalLeft;
                @DigitalLeft.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalLeft;
                @DigitalLeft.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalLeft;
                @DigitalRight.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalRight;
                @DigitalRight.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalRight;
                @DigitalRight.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalRight;
                @DigitalAxesModifier.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalAxesModifier;
                @DigitalAxesModifier.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalAxesModifier;
                @DigitalAxesModifier.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDigitalAxesModifier;
                @AnalogMove.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnAnalogMove;
                @AnalogMove.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnAnalogMove;
                @AnalogMove.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnAnalogMove;
                @Dash.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDash;
                @Jump.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnJump;
                @WallCling.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnWallCling;
                @WallCling.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnWallCling;
                @WallCling.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnWallCling;
                @DebugToggle.started -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDebugToggle;
                @DebugToggle.performed -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDebugToggle;
                @DebugToggle.canceled -= m_Wrapper.m_GameplayDefaultActionsCallbackInterface.OnDebugToggle;
            }
            m_Wrapper.m_GameplayDefaultActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DigitalUp.started += instance.OnDigitalUp;
                @DigitalUp.performed += instance.OnDigitalUp;
                @DigitalUp.canceled += instance.OnDigitalUp;
                @DigitalDown.started += instance.OnDigitalDown;
                @DigitalDown.performed += instance.OnDigitalDown;
                @DigitalDown.canceled += instance.OnDigitalDown;
                @DigitalLeft.started += instance.OnDigitalLeft;
                @DigitalLeft.performed += instance.OnDigitalLeft;
                @DigitalLeft.canceled += instance.OnDigitalLeft;
                @DigitalRight.started += instance.OnDigitalRight;
                @DigitalRight.performed += instance.OnDigitalRight;
                @DigitalRight.canceled += instance.OnDigitalRight;
                @DigitalAxesModifier.started += instance.OnDigitalAxesModifier;
                @DigitalAxesModifier.performed += instance.OnDigitalAxesModifier;
                @DigitalAxesModifier.canceled += instance.OnDigitalAxesModifier;
                @AnalogMove.started += instance.OnAnalogMove;
                @AnalogMove.performed += instance.OnAnalogMove;
                @AnalogMove.canceled += instance.OnAnalogMove;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @WallCling.started += instance.OnWallCling;
                @WallCling.performed += instance.OnWallCling;
                @WallCling.canceled += instance.OnWallCling;
                @DebugToggle.started += instance.OnDebugToggle;
                @DebugToggle.performed += instance.OnDebugToggle;
                @DebugToggle.canceled += instance.OnDebugToggle;
            }
        }
    }
    public GameplayDefaultActions @GameplayDefault => new GameplayDefaultActions(this);

    // Playback
    private readonly InputActionMap m_Playback;
    private IPlaybackActions m_PlaybackActionsCallbackInterface;
    private readonly InputAction m_Playback_ToggleRecording;
    private readonly InputAction m_Playback_TogglePlayback;
    public struct PlaybackActions
    {
        private @DefaultControls m_Wrapper;
        public PlaybackActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleRecording => m_Wrapper.m_Playback_ToggleRecording;
        public InputAction @TogglePlayback => m_Wrapper.m_Playback_TogglePlayback;
        public InputActionMap Get() { return m_Wrapper.m_Playback; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlaybackActions set) { return set.Get(); }
        public void SetCallbacks(IPlaybackActions instance)
        {
            if (m_Wrapper.m_PlaybackActionsCallbackInterface != null)
            {
                @ToggleRecording.started -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnToggleRecording;
                @ToggleRecording.performed -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnToggleRecording;
                @ToggleRecording.canceled -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnToggleRecording;
                @TogglePlayback.started -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnTogglePlayback;
                @TogglePlayback.performed -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnTogglePlayback;
                @TogglePlayback.canceled -= m_Wrapper.m_PlaybackActionsCallbackInterface.OnTogglePlayback;
            }
            m_Wrapper.m_PlaybackActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleRecording.started += instance.OnToggleRecording;
                @ToggleRecording.performed += instance.OnToggleRecording;
                @ToggleRecording.canceled += instance.OnToggleRecording;
                @TogglePlayback.started += instance.OnTogglePlayback;
                @TogglePlayback.performed += instance.OnTogglePlayback;
                @TogglePlayback.canceled += instance.OnTogglePlayback;
            }
        }
    }
    public PlaybackActions @Playback => new PlaybackActions(this);

    // UniversalInputs
    private readonly InputActionMap m_UniversalInputs;
    private IUniversalInputsActions m_UniversalInputsActionsCallbackInterface;
    private readonly InputAction m_UniversalInputs_PauseToggle;
    public struct UniversalInputsActions
    {
        private @DefaultControls m_Wrapper;
        public UniversalInputsActions(@DefaultControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseToggle => m_Wrapper.m_UniversalInputs_PauseToggle;
        public InputActionMap Get() { return m_Wrapper.m_UniversalInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UniversalInputsActions set) { return set.Get(); }
        public void SetCallbacks(IUniversalInputsActions instance)
        {
            if (m_Wrapper.m_UniversalInputsActionsCallbackInterface != null)
            {
                @PauseToggle.started -= m_Wrapper.m_UniversalInputsActionsCallbackInterface.OnPauseToggle;
                @PauseToggle.performed -= m_Wrapper.m_UniversalInputsActionsCallbackInterface.OnPauseToggle;
                @PauseToggle.canceled -= m_Wrapper.m_UniversalInputsActionsCallbackInterface.OnPauseToggle;
            }
            m_Wrapper.m_UniversalInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PauseToggle.started += instance.OnPauseToggle;
                @PauseToggle.performed += instance.OnPauseToggle;
                @PauseToggle.canceled += instance.OnPauseToggle;
            }
        }
    }
    public UniversalInputsActions @UniversalInputs => new UniversalInputsActions(this);
    public interface IGameplayDefaultActions
    {
        void OnDigitalUp(InputAction.CallbackContext context);
        void OnDigitalDown(InputAction.CallbackContext context);
        void OnDigitalLeft(InputAction.CallbackContext context);
        void OnDigitalRight(InputAction.CallbackContext context);
        void OnDigitalAxesModifier(InputAction.CallbackContext context);
        void OnAnalogMove(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnWallCling(InputAction.CallbackContext context);
        void OnDebugToggle(InputAction.CallbackContext context);
    }
    public interface IPlaybackActions
    {
        void OnToggleRecording(InputAction.CallbackContext context);
        void OnTogglePlayback(InputAction.CallbackContext context);
    }
    public interface IUniversalInputsActions
    {
        void OnPauseToggle(InputAction.CallbackContext context);
    }
}
